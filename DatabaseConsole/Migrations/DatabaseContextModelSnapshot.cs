// <auto-generated />
using System;
using DatabaseConsole.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DatabaseConsole.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DatabaseConsole.Models.CropDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Crop")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CropDetails");
                });

            modelBuilder.Entity("DatabaseConsole.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("DatabaseConsole.Models.FieldDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Field")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FieldDetails");
                });

            modelBuilder.Entity("DatabaseConsole.Models.PaidStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TranscationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TranscationId");

                    b.ToTable("PaidStatuss");
                });

            modelBuilder.Entity("DatabaseConsole.Models.Rate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(6,2)");

                    b.HasKey("Id");

                    b.ToTable("Rates");
                });

            modelBuilder.Entity("DatabaseConsole.Models.Transcation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CropDetailId")
                        .HasColumnType("int");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("EndHour")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FieldDetailId")
                        .HasColumnType("int");

                    b.Property<decimal>("PriceP")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PriceT")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("RateId")
                        .HasColumnType("int");

                    b.Property<string>("StartHour")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalHours")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CropDetailId");

                    b.HasIndex("FieldDetailId");

                    b.HasIndex("RateId");

                    b.HasIndex(new[] { "CustomerId" }, "IX_PaidStatuss_CustomerId");

                    b.ToTable("Transcations");
                });

            modelBuilder.Entity("DatabaseConsole.Models.PaidStatus", b =>
                {
                    b.HasOne("DatabaseConsole.Models.Transcation", "Transcation")
                        .WithMany("PaidStatuss")
                        .HasForeignKey("TranscationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Transcation");
                });

            modelBuilder.Entity("DatabaseConsole.Models.Transcation", b =>
                {
                    b.HasOne("DatabaseConsole.Models.CropDetail", "CropDetail")
                        .WithMany("Transcations")
                        .HasForeignKey("CropDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DatabaseConsole.Models.Customer", "Customer")
                        .WithMany("Transcations")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DatabaseConsole.Models.FieldDetail", null)
                        .WithMany("Transcations")
                        .HasForeignKey("FieldDetailId");

                    b.HasOne("DatabaseConsole.Models.Rate", "Rate")
                        .WithMany("Transcations")
                        .HasForeignKey("RateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CropDetail");

                    b.Navigation("Customer");

                    b.Navigation("Rate");
                });

            modelBuilder.Entity("DatabaseConsole.Models.CropDetail", b =>
                {
                    b.Navigation("Transcations");
                });

            modelBuilder.Entity("DatabaseConsole.Models.Customer", b =>
                {
                    b.Navigation("Transcations");
                });

            modelBuilder.Entity("DatabaseConsole.Models.FieldDetail", b =>
                {
                    b.Navigation("Transcations");
                });

            modelBuilder.Entity("DatabaseConsole.Models.Rate", b =>
                {
                    b.Navigation("Transcations");
                });

            modelBuilder.Entity("DatabaseConsole.Models.Transcation", b =>
                {
                    b.Navigation("PaidStatuss");
                });
#pragma warning restore 612, 618
        }
    }
}
